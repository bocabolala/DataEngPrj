- hosts: all
  vars_prompt:

    - name: GitHubUserName
      prompt: What is your username?
      private: no

    - name: GitHubPrivateToken
      prompt: What is your Private Token? GitHub do not support password login anymore, generate private token to get access to your private repo.
      
      
  tasks:
   
   - name: Generate hosts file
     lineinfile: dest=/etc/hosts
                 regexp='.*{{ item }}$'
                 line="{{ hostvars[item].ansible_default_ipv4.address }} {{item}}"
                 state=present            
     when: hostvars[item].ansible_default_ipv4.address is defined
     with_items: "{{groups['all']}}"
     become: true

   - name: Set hostname
     hostname: name="{{inventory_hostname}}"
     become: true 
   
   - name: APT update 
     apt: update_cache=yes upgrade=dist
     become: true
   
   - name: Delete Git repo if exist 
     file:
      path: /home/appuser/DE2_Project
      state: absent

   - name: Download git repo with private token
     become: true 
     git:
        repo: 'https://GitHubUserName:GitHubPrivateToken@github.com/romero9889/DE2_Project.git'
        dest: /home/appuser/DE2_Project
        clone: yes
        force: yes
        version: main
   
   - name: Copy post-receive to user root dir
     shell: cp /home/appuser/DE2_Project/ci_cd/post-receive /home/appuser/

   - name: Change ownership of a directory
     become: true
     file:
      path: /home/
      state: directory
      recurse: yes
      owner: appuser
      group: appuser
   
   - name: Download basic pip packages
     apt: pkg=python3-pip state=latest 
     become: true 
   

- hosts: production_server
 
  vars_files:
   - setup_var.yml  
  
  tasks:  
   - name: Extra packages
     apt: pkg={{item}} state=latest update_cache=true 
     with_items:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
     become: true  

   - name: APT update
     apt: update_cache=yes upgrade=dist
     become: true

   - name: Add Docker repository key
     apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
     become: true

   - name: Add Docker repository 
     command: add-apt-repository -y "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
     become: true

   - name: APT update for docker 
     apt: update_cache=yes upgrade=dist
     become: true
  
   - name: Create Ansible docker config directory.
     become: true
     file:
       path: "/etc/docker"
       state: directory

   - name: Create Ansible docker file to configure Docker MTU to match SNIC for pip issue
     become: true
     copy:
       dest: "/etc/docker/daemon.json"
       content: |
        {
          "mtu": 1450
        }

   - name: Install Docker  
     apt: pkg=docker-ce state=present update_cache=true allow_unauthenticated=yes
     become: true

   - name: Download docker-compose 
     become: yes
     get_url:        
      url: "https://github.com/docker/compose/releases/download/1.24.0/docker-compose-{{ansible_system}}-{{ansible_architecture}}"
      dest: /usr/local/bin/docker-compose
      mode: +x  

   - name: Building containers
     become: true
     shell: docker build -t prj:v1 .
     args: 
      chdir: /home/appuser/DE2_Project/ci_cd/production_server

   - name: Change docker permission
     shell: sudo usermod -aG docker $USER



- hosts: development_server 
  
  vars_files:
   - setup_var.yml

  tasks:
   - name: Extra packages
     apt: pkg=python3-pip state=latest update_cache=true  
     become: true

   - name: Install ML packages
     become: true
     pip: 
      name: tensorflow==2.5.3, keras==2.4.1, numpy, future, pandas, scikit-learn

   - name: Generate an OpenSSH rsa keypair with a different size (2048 bits)
     community.crypto.openssh_keypair:
      path: /home/appuser/.ssh/id_rsa
      force: True 

   - name: Retrieve DevServer key to master node
     ansible.builtin.fetch:
      src: /home/appuser/.ssh/id_rsa.pub
      dest: /tmp/special/
      flat: yes


- hosts: production_server

  vars_files:
   - setup_var.yml
  
  tasks:
   - name: Generate an OpenSSH rsa keypair with a different size (2048 bits)
     community.crypto.openssh_keypair:
      path: /home/appuser/.ssh/id_rsa
      force: True 

   - name: Set authorized key taken from file
     ansible.posix.authorized_key:
      user: appuser
      state: present
      key: "{{ lookup('file', '/tmp/special/id_rsa.pub') }}"
   
   - name: Create a directory if it does not exist   
     ansible.builtin.file:
      path: /home/appuser/jump_dir
      state: directory

   - name: Git init bare dir
     command: git init --bare /home/appuser/jump_dir
   
   - name: Copy post-receive from master Repo
     ansible.builtin.copy:
      src: /home/ubuntu/DE2_Project/ci_cd/post-receive
      dest: /home/appuser/jump_dir/hooks/
      force: True
   
   - name: Chmod of hooks
     command: chmod 777 post-receive
     args:
       chdir: /home/appuser/jump_dir/hooks


- hosts: development_server
  
  vars_files:
   - setup_var.yml
  
  tasks:
   - name: Add git hooks in production server 1 
     shell: 
      cmd: git remote add prod1 appuser@{{prod1_addr}}:{{default_jumpd_path}}
      chdir: /home/appuser/DE2_Project

   - name: Add git hooks in production server 2
     shell: 
      cmd: git remote add prod2 appuser@{{prod2_addr}}:{{default_jumpd_path}}
      chdir: /home/appuser/DE2_Project

   - name: Add git hooks in production server 3 
     shell: 
      cmd: git remote add prod3 appuser@{{prod3_addr}}:{{default_jumpd_path}}
      chdir: /home/appuser/DE2_Project

